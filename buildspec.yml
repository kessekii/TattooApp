version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - echo $AWS_DEFAULT_REGION
      - aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 770327867784.dkr.ecr.eu-central-1.amazonaws.com
      - REPOSITORY_URI=770327867784.dkr.ecr.eu-central-1.amazonaws.com/aistreaming-client
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - npm -v
      - sudo yum -y update
      - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - echo $REPOSITORY_URI:$IMAGE_TAG
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:latest
      - export VERSION=$(buildnumgen)
  post_build:
    commands:
      - echo Build completed on `date`
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo waiting image definition file...
      - printf '[{"name":"proxy","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - printf '{"ImageURI":"%s"}' $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json
artifacts:
  files:
    - "image*.json"
    - "appspec.yaml"
    - "taskdef.json"
  secondary-artifacts:
    DefinitionArtifact:
      files:
        - appspec.yaml
        - taskdef.json
    ImageArtifact:
      files:
        - imageDetail.json
